[{
	"name": "Anna Henningsen",
	"twitter": "addaleax",
	"github": "addaleax",
	"portrait": "anna.jpeg",
	"bio": "she/her",
	"talk": "Node.js � Character Encodings",
	"abstract": "Find out what happened the last time you encountered a stray ï»¿ in your text or what’s tricky when your user’s passwords contain special characters! Every developer has fallen over the tripwire that character encodings present, and Node.js has a couple of quirks of its own. This talk will explain the involved concepts on a beginner’s level and make sure you’ll understand everything you need to know."
}, {
	"name": "Bryan English",
	"twitter": "bengl",
	"github": "bengl",
	"portrait": "bryan.jpeg",
	"bio": "Ottawan in SF. @nodejs at Intrinsic. previously Yahoo.",
	"talk": "Signet: Safely Curl Pipe Bash. No Seriously!",
	"abstract": "Signet is an answer to “How can we curl to bash with some measure of safety and authenticity?” taking a different approach from normal signatures. It’s meant to be an addon to existing package management tooling. It’s platform and language agnostic, and it’s made in node.js!"
}, {
	"name": "Daniela Matos de Carvalho",
	"twitter": "sericaia",
	"github": "sericaia",
	"portrait": "daniela.jpeg",
	"bio": "Full-stack Developer @YLDio, @hapijs lead maintainer",
	"talk": "Let’s play with HTTP/2",
	"abstract": "This talk aims to explain how HTTP/2 works: understand the new features that the protocol has in comparison with HTTP/1.x, and what developers will need to take into consideration when implementing it. We’re going to learn by doing it, and I’ll demonstrate how to debug a TLS connection and show some examples on how to implement a NodeJS server."
}, {
	"name": "Eva Sánchez Guerrero",
	"twitter": "lavigi",
	"github": "",
	"portrait": "eva.jpeg",
	"bio": "Voice services enthusiast. Officially, Healthcare Innovation Business Consultant @ The Linde Group.",
	"talk": "Creating conversational bots with Amazon Lex",
	"abstract": ""
}, {
	"name": "Irina Shestak",
	"twitter": "_lrlna",
	"github": "lrlna",
	"portrait": "irina.jpeg",
	"bio": "cat turned software constructor;",
	"talk": "knock-knock-who-there-file-compression-talk_FINAL_2.tar.trz.bz2.gz",
	"abstract": "Fade in. An opened terminal window. iTerm2 is the flavour. Dracula, the theme. You split the panes in two. You are at it again: a stash of audio buffers and that dream of manipulating a lossless file. With node as your language of choice you embark on the night. You manipulate, you transform, you have your byte order sorted, on their own accord your fingers start to type gzip -f yourFavPhilCollinsSong.wav. All of a sudden, a whisper:\n\nBut what if.\n\nwe stream.\n\nfile compression.\n\non the fly.\n\nFade to black.\n\nIn this talk we will walk through file compression algorithms in node as well compression standards. We will cover working with streams, audio buffers, and typed arrays to get us to compress and decompress files, and yourFavPhilCollinsSong.wav."
}, {
	"name": "Jan Lenhardt",
	"twitter": "janl",
	"github": "janl",
	"portrait": "jan.jpeg",
	"bio": "Makes @couchdb @hoodiehq @jsconfeu @greenkeeperio & #offlinefirst",
	"talk": "Kill All Humans",
	"abstract": "Machines are made for automating tasks that humans are bad at. Yet, Node developers still do many tasks by hand that could be automated away. Let me introduce you to an automation workflow that makes your development team fly."
}, {
	"name": "Logan McDonald",
	"twitter": "loganmeetsworld",
	"github": "loganmeetsworld",
	"portrait": "logan.jpeg",
	"bio": "Ops Engineer @kickstarter. Previously writing software @chef & @Ada-C4.",
	"talk": "Using Node in a serverless world…",
	"abstract": "Node can be a great ally to any ops engineer. This talk will dive into AWS lambdas, a.k.a serverless functions and show how Node can be used to build a small application running on AWS Lambda with the help of the a new deployment model called SAM (AWS Serverless Application Model). We will also discuss testing (with Mocha and Chai) as well as moving towards purely functional javascript and some of its concepts (immutability and point-free programming)."
}, {
	"name": "Luca Maraschi",
	"twitter": "lucamaraschi",
	"github": "lucamaraschi",
	"portrait": "luca.jpeg",
	"bio": "Software Architect @nearform",
	"talk": "Building a Scalable Pub/Sub system with UpRing",
	"abstract": "The world is real-time: our users expect to receive live notifications, updates, and use extremely reactive interfaces. In a real-time world, we might want to connect physical things, each of them with their own live connection to the cloud. Delivering live notifications has always been a complex task, but tools like WebSockets and Socket.io have enabled a wide range of applications to flourish. Scaling those systems has often turns out to be problematic, and they generally leverage an external publish/subscribe broker to deliver the messages, with our application or the framework to act as a proxy. Those brokers are usually central points of failure, and are extremely hard to scale. UpRing is a distributed system framework for building applications on top of a Consistent Hashring. In other words, UpRing is a P2P system for cloud applications. With UpRing, all the notifications for a single element are routed through the same server, removing the central point of failure and allowing for fine-grained elastic scalability in ratio to the amount of current users."
}, {
	"name": "Myles Borins",
	"twitter": "MylesBorins",
	"github": "mylesborins",
	"portrait": "myles.jpeg",
	"bio": "Artist, Musician, Developer, and Inventor. @nodejs CTC",
	"talk": "Node.js Releases, how do they work?",
	"abstract": "Node.js is growing up, and with that comes the responsibility of proper legacy support. As of Node.js Argon (v4.2.0) there is an official Long Term Support release cycle that lasts for 30 months!\n\nHow does a project moving at the pace of node maintain multiple release lines? How does a commit get backported? How is a release actually made?\nYou will learn all this and more on this weeks episode of \"Node.js Releases, how do they work?\".\nI work as a full time Node.js contributor for IBM. Currently I am one of the individuals in the trenches back porting commits. If you are using an LTS version of node, there is a decent likely hood that I released it.\n\nRelease management is a very interesting art, and I would love the opportunity to pull the curtains back a bit on the process of how code lands into a project like node, and the kind of edge cases created when wrangling such a repo."
}, {
	"name": "Thomas Watson",
	"twitter": "wa7son",
	"github": "watson",
	"portrait": "watson.jpeg",
	"bio": "Node.js hacker - also doing open source stuff at @opbeat",
	"talk": "Build your own JavaScript powered radio",
	"abstract": "Capture and transmit radio waves using software (and just a tiny bit of hardware). This talk is about SDR (Software Defined Radio) and how you can listen to and transcode the radio spectrum using Node.js. It allows you to interact with IoT devices, debug cellular meta-data, and intercept commercial and private airplane communication."
}, {
	"name": "William Kapke",
	"twitter": "williamkapke",
	"github": "williamkapke",
	"portrait": "william.jpeg",
	"bio": "Node.js Board of Directors, Consultant, node.green creator. Previously Tinder, MySpace",
	"talk": "The Node.js Organization: Behind the scenes",
	"abstract": "Node.js is one of the most active Organizations on GitHub. There are over 500 contributors working together to constantly crank out new versions and updates to existing ones. Hundreds of comments, issues, and pull requests are generated and resolved every month by a very diverse group of volunteers.\n\nSo, how do we pull it off?\n\nIn this talk, I will give a tour of The Node.js Foundation Committees, Working Groups, Teams and Github repositories. I'll explain why they exist, how they were created, who runs them... and how **you** can join in!"
}]
